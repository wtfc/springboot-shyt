<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
	">

	<context:component-scan
		base-package="com.jc.**.service,com.jc.**.facade,com.jc.**.dao"></context:component-scan>

	<bean id="springContextHolder" class="com.jc.system.common.util.SpringContextHolder"
		lazy-init="false" />

	<!-- <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName">
		<value>java:comp/env/jndi/horizon</value>
		</property>
	</bean> -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:application.properties"/>
    </bean>
    
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${spring.datasource.driver-class-name}" />
     
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${spring.datasource.url}"/>
        <property name="username" value="${spring.datasource.username}" />
        <property name="password" value="${spring.datasource.password}" />
     
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="${spring.datasource.initialSize}" />
        <property name="minIdle" value="${spring.datasource.minIdle}" />
        <property name="maxActive" value="${spring.datasource.maxActive}" />
     
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000" />
     
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
     
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />
     
        <property name="validationQuery" value="SELECT 'x'" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" /> 
        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat" />
</bean>

	<bean id="mybatisSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:config/mybatisConfig.xml" />
		<property name="mapperLocations">
			<list>
				<value>classpath:com/jc/**/domain/map/*.xml</value>
<!-- 				<value>classpath:com/jc/**/domain/oracleMap/*.xml</value> -->
			</list>
		</property>
	</bean>

	<bean class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="mybatisSessionFactory" />
	</bean>
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource" />

	<tx:annotation-driven transaction-manager="txManager" />
	<aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>
	<bean id="logAspect" class="com.jc.system.security.util.LogAspect" />
	<aop:config proxy-target-class="true">
		<aop:pointcut id="logPointCut"
			expression="execution(* com.jc..web.*Controller.*(..))" />
		<aop:advisor pointcut-ref="logPointCut" advice-ref="logAspect" />
	</aop:config>
	<bean id="methodExecuteTimeAdvice" class="com.jc.system.common.util.MethodExecuteTimeAdvice" />
	<aop:config proxy-target-class="true">
		<aop:pointcut id="methodExecuteTimePointCut"
			expression="execution(* com.jc..web.*Controller.*(..))" />
		<aop:advisor pointcut-ref="methodExecuteTimePointCut"
			advice-ref="methodExecuteTimeAdvice" />
	</aop:config>

</beans>